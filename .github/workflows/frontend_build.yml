name: downloader_frontend_ci-cd

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - '**/README.md'
    if: github.repository == 'redyk654/downloader_frontend'
  pull_request:
    branches:
      - main
      - master
    if: github.repository == 'redyk654/downloader_frontend'

jobs:
  build-and-test:
    if: github.repository == 'redyk654/downloader_frontend'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run unit tests
        run: npx jest --config jest.config.cjs --runInBand

      - name: Build project
        run: npm run build

  deploy:
    if: github.repository == 'redyk654/downloader_frontend' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build project
        run: npm run build

      - name: Prepare deployment directory on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Cr√©er le dossier temporaire et s'assurer qu'il est accessible
            mkdir -p /tmp/deploy-frontend
            chmod 755 /tmp/deploy-frontend
            echo "‚úÖ Dossier temporaire pr√©par√©"

      - name: Upload build files to temporary directory
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/*"
          target: "/tmp/deploy-frontend/"
          strip_components: 0

      - name: Finalize deployment on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Cr√©er le dossier de production s'il n'existe pas
            sudo mkdir -p /var/www/downloader-frontend
            
            # Sauvegarder l'ancienne version (optionnel)
            if [ -d "/var/www/downloader-frontend" ]; then
              backup_dir="/var/www/backup-frontend-$(date +%Y%m%d%H%M%S)"
              sudo mkdir -p "$backup_dir"
              sudo cp -r /var/www/downloader-frontend/* "$backup_dir/" 2>/dev/null || true
              echo "üì¶ Ancienne version sauvegard√©e dans: $backup_dir"
            fi
            
            # Supprimer l'ancien contenu
            sudo rm -rf /var/www/downloader-frontend/*
            
            # D√©placer les nouveaux fichiers
            sudo mv /tmp/deploy-frontend/* /var/www/downloader-frontend/
            
            # Corriger les permissions
            sudo chown -R www-data:www-data /var/www/downloader-frontend
            sudo chmod -R 755 /var/www/downloader-frontend
            
            # Nettoyer le dossier temporaire
            rm -rf /tmp/deploy-frontend
            
            # Red√©marrer Nginx
            sudo systemctl restart nginx
            
            # V√©rifier le d√©ploiement
            if [ -f "/var/www/downloader-frontend/index.html" ]; then
              echo "‚úÖ D√©ploiement termin√© avec succ√®s !"
              echo "üåê L'application est disponible sur: http://$(hostname -I | awk '{print $1}')"
            else
              echo "‚ùå Erreur: index.html non trouv√© apr√®s d√©ploiement"
              exit 1
            fi

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # V√©rifications finales
            echo "üîç V√©rification du d√©ploiement..."
            echo "Contenu du dossier de d√©ploiement:"
            ls -la /var/www/downloader-frontend/
            
            echo "Status de Nginx:"
            sudo systemctl status nginx --no-pager
            
            echo "Test de l'application:"
            curl -s -o /dev/null -w "HTTP Code: %{http_code}\n" http://localhost || true